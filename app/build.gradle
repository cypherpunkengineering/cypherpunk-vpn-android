apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.cypherpunk.privacy"
        minSdkVersion 15
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 89
        versionName "0.9.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("certificate/debug.keystore")
        }

        release {
            lintOptions {
                disable 'MissingTranslation'
            }
//            storeFile rootProject.file("certificate/sample.keystore")
//            storePassword "sample"
//            keyAlias "sample"
//            keyPassword "sample"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
        }

        release {
            minifyEnabled false
//            applicationIdSuffix '.debug'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

//            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "market"

    productFlavors {
        amazon {
            dimension "market"
        }
        play {
            dimension "market"
        }
    }
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${supportLibraryVersion}"
}

dependencies {
    amazonImplementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':domain')
    implementation project(':vpn')

    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:design:${supportLibraryVersion}"
    implementation "com.android.support:transition:${supportLibraryVersion}"
    implementation "com.android.support:preference-v7:${supportLibraryVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.0-beta1'

    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    implementation "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"

    // https://github.com/firebase/firebase-jobdispatcher-android#user-content-firebase-jobdispatcher-
    implementation 'com.firebase:firebase-jobdispatcher:0.7.0'

    // http://jakewharton.github.io/butterknife/
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    implementation 'com.jeremyfeinstein.slidingmenu:library:1.3@aar'

    // https://github.com/JakeWharton/timber
    implementation 'com.jakewharton.timber:timber:4.5.1'

    implementation 'com.deploygate:sdk:3.1'
    implementation 'com.google.firebase:firebase-core:10.0.1'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.2'

    // http://square.github.io/retrofit/
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // https://github.com/orhanobut/hawk
    implementation 'com.github.orhanobut:hawk:1.23'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.3.2'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    testImplementation 'org.assertj:assertj-core:3.8.0'

    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test:rules:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:2.2.2'
    androidTestImplementation 'org.mockito:mockito-core:2.7.22'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.2.0'
}

apply plugin: 'com.google.gms.google-services'
